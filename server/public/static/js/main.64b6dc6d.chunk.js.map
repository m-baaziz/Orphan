{"version":3,"sources":["hoc/__generated__/AreasQuery.graphql.js","hoc/__generated__/DisordersWithScoresQuery.graphql.js","components/AppBar.jsx","api/environment.js","hoc/Areas.jsx","components/AreaBtn.jsx","components/Statements.jsx","views/Home.jsx","hoc/DisordersWithScores.jsx","components/Table.jsx","components/SearchBar.jsx","components/DisordersWithScoresTable.jsx","views/Disorders.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["node","v0","hash","module","exports","v1","withStyles","theme","appBar","toolbar","link","textDecoration","color","toolbarTitle","flexGrow","props","classes","AppBar","className","Toolbar","Typography","variant","noWrap","to","environment","Environment","network","Network","create","operation","variables","fetch","method","headers","body","JSON","stringify","query","text","then","response","json","store","Store","RecordSource","Areas","RenderComponent","render","renderProps","res","error","data","areas","parentPhenotypes","button","margin","spacing","area","HPOId","name","description","active","onClick","Button","event","preventDefault","title","replace","root","minHeight","textField","marginLeft","marginRight","textInputsAndBtnContainer","display","flexDirection","textInputsContainer","padding","textInputContainer","justifyContent","deleteContainer","deleteBtn","addBtn","statements","onStatementsChange","React","useState","activeArea","setActiveArea","onAreaClick","onStatementTextChange","index","target","value","statementTexts","onDeleteClick","texts","splice","TextInput","TextField","id","defaultValue","fullWidth","autoComplete","onBlur","DeleteButton","IconButton","aria-label","fontSize","map","key","filter","s","length","_","btn","startIcon","sendBtn","position","bottom","right","setStatements","Paper","Fab","filteredStatements","reduce","acc","unwrappedStatements","comment","statementsHash","btoa","url","Object","keys","history","push","DisordersWithScores","disordersWithScores","matchDisorders","DEFAULT_ROWS_PER_PAGE_OPTIONS","items","cols","rowsPerPageOptions","page","setPage","rowsPerPage","setRowsPerPage","sorting","setSorting","rows","sortBy","row","o","slice","processTableRows","item","onHeaderSortClick","header","onRowClick","console","log","tableWrapper","Table","table","aria-labelledby","size","TableHead","TableRow","TableCell","sortDirection","TableSortLabel","direction","visuallyHidden","TableBody","hover","tabIndex","align","isNaN","TablePagination","component","count","backIconButtonProps","nextIconButtonProps","onChangePage","onChangeRowsPerPage","alignItems","width","input","flex","iconButton","divider","height","placeholder","onChange","classNames","InputBase","inputProps","DisordersWithScoresTable","search","setSearch","disorders","Array","isArray","disorder","includes","searchBar","orphaNumber","score","num","digits","toFixed","round","marginBottom","tableContainer","location","queryString","parse","atob","e","createMuiTheme","palette","primary","blue","secondary","orange","content","overflow","appBarSpacer","mixins","ThemeProvider","CssBaseline","path","exact","Home","Disorders","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.64b6dc6d.chunk.js","sourcesContent":["/**\n * @flow\n * @relayHash b2e1681e48303c61d78fefe71a1d5c8b\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type AreasQueryVariables = {||};\nexport type AreasQueryResponse = {|\n  +parentPhenotypes: ?$ReadOnlyArray<?{|\n    +HPOId: ?string,\n    +name: ?string,\n    +description: ?string,\n  |}>\n|};\nexport type AreasQuery = {|\n  variables: AreasQueryVariables,\n  response: AreasQueryResponse,\n|};\n*/\n\n\n/*\nquery AreasQuery {\n  parentPhenotypes {\n    HPOId\n    name\n    description\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LinkedField\",\n    \"alias\": null,\n    \"name\": \"parentPhenotypes\",\n    \"storageKey\": null,\n    \"args\": null,\n    \"concreteType\": \"Phenotype\",\n    \"plural\": true,\n    \"selections\": [\n      {\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"HPOId\",\n        \"args\": null,\n        \"storageKey\": null\n      },\n      {\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"name\",\n        \"args\": null,\n        \"storageKey\": null\n      },\n      {\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"description\",\n        \"args\": null,\n        \"storageKey\": null\n      }\n    ]\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"AreasQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": (v0/*: any*/)\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"AreasQuery\",\n    \"argumentDefinitions\": [],\n    \"selections\": (v0/*: any*/)\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"AreasQuery\",\n    \"id\": null,\n    \"text\": \"query AreasQuery {\\n  parentPhenotypes {\\n    HPOId\\n    name\\n    description\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = 'b7adb0192f0cf4c39501ad0b4ef0293a';\nmodule.exports = node;\n","/**\n * @flow\n * @relayHash 6d8e17339f3be7cbc0bfd07c8b689113\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type Statement = {|\n  area?: ?string,\n  comment?: ?string,\n|};\nexport type DisordersWithScoresQueryVariables = {|\n  statements?: ?$ReadOnlyArray<?Statement>\n|};\nexport type DisordersWithScoresQueryResponse = {|\n  +matchDisorders: ?$ReadOnlyArray<?{|\n    +disorder: ?{|\n      +orphaNumber: ?string,\n      +name: ?string,\n      +description: ?string,\n    |},\n    +score: ?number,\n  |}>\n|};\nexport type DisordersWithScoresQuery = {|\n  variables: DisordersWithScoresQueryVariables,\n  response: DisordersWithScoresQueryResponse,\n|};\n*/\n\n\n/*\nquery DisordersWithScoresQuery(\n  $statements: [Statement]\n) {\n  matchDisorders(statements: $statements) {\n    disorder {\n      orphaNumber\n      name\n      description\n    }\n    score\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"statements\",\n    \"type\": \"[Statement]\",\n    \"defaultValue\": null\n  }\n],\nv1 = [\n  {\n    \"kind\": \"LinkedField\",\n    \"alias\": null,\n    \"name\": \"matchDisorders\",\n    \"storageKey\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"statements\",\n        \"variableName\": \"statements\"\n      }\n    ],\n    \"concreteType\": \"DisorderWithScore\",\n    \"plural\": true,\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"disorder\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"Disorder\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"orphaNumber\",\n            \"args\": null,\n            \"storageKey\": null\n          },\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"name\",\n            \"args\": null,\n            \"storageKey\": null\n          },\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"description\",\n            \"args\": null,\n            \"storageKey\": null\n          }\n        ]\n      },\n      {\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"score\",\n        \"args\": null,\n        \"storageKey\": null\n      }\n    ]\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"DisordersWithScoresQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": (v1/*: any*/)\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"DisordersWithScoresQuery\",\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"DisordersWithScoresQuery\",\n    \"id\": null,\n    \"text\": \"query DisordersWithScoresQuery(\\n  $statements: [Statement]\\n) {\\n  matchDisorders(statements: $statements) {\\n    disorder {\\n      orphaNumber\\n      name\\n      description\\n    }\\n    score\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = '708dddf1c71cae12dd4c2d32216db923';\nmodule.exports = node;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = (theme) => ({\n  appBar: {\n  },\n  toolbar: {\n  },\n  link: {\n    textDecoration: 'none',\n    color: 'inherit',\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n  },\n});\n\nfunction AppBarComponent(props) {\n  const { classes } = props;\n\n  return (\n    <AppBar className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.toolbarTitle}>\n          <Link to=\"/\" className={classes.link}>\n            Orphan\n          </Link>\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default withStyles(styles)(AppBarComponent);\n","import {\n Environment, Network, RecordSource, Store \n} from 'relay-runtime';\n\nfunction fetchQuery(operation, variables) {\n  return fetch('/graphql', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      query: operation.text,\n      variables,\n    }),\n  }).then((response) => response.json());\n}\n\nconst environment = new Environment({\n  network: Network.create(fetchQuery),\n  store: new Store(new RecordSource()),\n});\n\nexport default environment;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport graphql from 'babel-plugin-relay/macro';\nimport { QueryRenderer } from 'react-relay';\nimport environment from '../api/environment';\n\nfunction Areas(props) {\n  const { render: RenderComponent, renderProps } = props;\n\n  return (\n    <QueryRenderer\n      environment={environment}\n      query={graphql`\n        query AreasQuery {\n          parentPhenotypes {\n            HPOId\n            name\n            description\n          }\n        }\n      `}\n      variables={{}}\n      render={(res) => {\n        const { error, props: data } = res;\n        if (error) {\n          return <div>Error!</div>;\n        }\n        if (!data) {\n          return <div>Loading...</div>;\n        }\n        return <RenderComponent areas={data.parentPhenotypes} {...renderProps} />;\n      }}\n    />\n  );\n}\n\nexport default Areas;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst styles = (theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n});\n\nfunction AreaBtn(props) {\n  const {\n    classes, area: { HPOId, name, description }, active, onClick,\n  } = props;\n\n  const onClickHander = (event) => {\n    event.preventDefault();\n    onClick(HPOId);\n  };\n\n  const simplifyName = (n) => n.replace(/(An )?[aA]bnormality of( the)?/g, '');\n\n  return (\n    <Button variant=\"outlined\" color={active ? 'primary' : 'default'} className={classes.button} onClick={onClickHander}>\n      <span title={description}>{simplifyName(name)}</span>\n    </Button>\n  );\n}\n\nexport default withStyles(styles)(AreaBtn);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport Areas from '../hoc/Areas';\nimport AreaBtn from './AreaBtn';\n\nconst styles = (theme) => ({\n  root: {\n    minHeight: 500,\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  textInputsAndBtnContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  textInputsContainer: {\n    padding: 10,\n  },\n  textInputContainer: {\n    margin: 'auto',\n    display: 'flex',\n    justifyContent: 'space-around',\n  },\n  deleteContainer: {\n    display: 'flex',\n  },\n  deleteBtn: {\n    margin: 'auto',\n    marginLeft: 5,\n  },\n  addBtn: {\n    margin: 'auto',\n  },\n  flexGrow: {\n    flexGrow: 1,\n  },\n});\n\nfunction Statements(props) {\n  const { classes, statements, onStatementsChange } = props;\n  const [activeArea, setActiveArea] = React.useState();\n\n  const onAreaClick = (HPOId) => {\n    if (!statements[HPOId]) {\n      onStatementsChange({\n        ...statements,\n        [HPOId]: [''],\n      });\n    }\n    setActiveArea(HPOId);\n  };\n\n  const onAddStatementClick = () => {\n    onStatementsChange({\n      ...statements,\n      [activeArea]: [...statements[activeArea], ''],\n    });\n  };\n\n  const onStatementTextChange = (index) => (event) => {\n    const text = event.target.value;\n    const statementTexts = [...statements[activeArea]];\n    statementTexts[index] = text;\n    onStatementsChange({\n      ...statements,\n      [activeArea]: statementTexts,\n    });\n  };\n\n  const onDeleteClick = (index) => () => {\n    const texts = [...statements[activeArea]];\n    texts.splice(index, 1);\n    onStatementsChange({\n      ...statements,\n      [activeArea]: texts,\n    });\n  };\n\n  const TextInput = ({ index }) => (\n    <TextField\n      id=\"outlined-bare\"\n      className={classes.textField}\n      defaultValue={statements[activeArea][index]}\n      margin=\"normal\"\n      variant=\"outlined\"\n      fullWidth\n      autoComplete=\"off\"\n      onBlur={onStatementTextChange(index)}\n    />\n  );\n\n  const DeleteButton = ({ index }) => (\n    <IconButton\n      aria-label=\"delete\"\n      className={classes.deleteBtn}\n      onClick={onDeleteClick(index)}\n    >\n      <DeleteIcon fontSize=\"small\" />\n    </IconButton>\n  );\n\n  const AreaBtnGroup = ({ areas }) => (\n    <>\n      { areas.map((area) => (\n        <AreaBtn\n          key={area.HPOId}\n          area={area}\n          active={activeArea === area.HPOId || (statements[area.HPOId] && statements[area.HPOId].filter((s) => s).length > 0)}\n          onClick={onAreaClick}\n        />\n      ))}\n    </>\n  );\n\n  return (\n    <div className={classes.root}>\n      <div>\n        <Areas render={AreaBtnGroup} />\n      </div>\n      {!activeArea ? null : (\n        <div className={classes.textInputsAndBtnContainer}>\n          <div className={classes.textInputsContainer}>\n            {statements[activeArea].map((_, index) => (\n              /* eslint-disable-next-line react/no-array-index-key */\n              <div key={`${activeArea}-${index}`} className={classes.textInputContainer}>\n                <div className={classes.flexGrow}>\n                  <TextInput index={index} />\n                </div>\n                <div className={classes.deleteContainer}>\n                  <DeleteButton index={index} />\n                </div>\n              </div>\n            ))}\n          </div>\n          <div className={classes.addBtn}>\n            <Button\n              className={classes.btn}\n              variant=\"contained\"\n              color=\"primary\"\n              startIcon={<AddIcon />}\n              onClick={onAddStatementClick}\n            >\n              Statement\n            </Button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default withStyles(styles)(Statements);\n","import React from 'react';\nimport reduce from 'lodash/reduce';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Fab from '@material-ui/core/Fab';\nimport SendIcon from '@material-ui/icons/Send';\n\nimport Statements from '../components/Statements';\n\nconst styles = () => ({\n  root: {\n    margin: 10,\n    padding: 10,\n    flexGrow: 1,\n  },\n  sendBtn: {\n    position: 'fixed',\n    bottom: 20,\n    right: 20,\n  },\n});\n\nfunction Home(props) {\n  const { classes } = props;\n  const [statements, setStatements] = React.useState({});\n\n  const onSendStatementsClick = () => {\n    const filteredStatements = reduce(statements, (acc, value, key) => {\n      const unwrappedStatements = value.filter((s) => s).map((comment) => ({\n        area: key,\n        comment,\n      }));\n      return unwrappedStatements.length ? [\n        ...acc,\n        ...unwrappedStatements,\n      ] : acc;\n    }, []);\n    const statementsHash = btoa(JSON.stringify(filteredStatements));\n    const url = `/disorders${Object.keys(filteredStatements).length ? `?statements=${statementsHash}` : ''}`;\n    props.history.push(url);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <Statements statements={statements} onStatementsChange={setStatements} />\n      <div className={classes.sendBtn}>\n        <Fab\n          className={classes.btn}\n          color=\"primary\"\n          onClick={onSendStatementsClick}\n        >\n          <SendIcon />\n        </Fab>\n      </div>\n    </Paper>\n  );\n}\n\nexport default withStyles(styles)(Home);\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport graphql from 'babel-plugin-relay/macro';\nimport { QueryRenderer } from 'react-relay';\nimport environment from '../api/environment';\n\nfunction DisordersWithScores(props) {\n  const { statements, render: RenderComponent, renderProps } = props;\n\n  return (\n    <QueryRenderer\n      environment={environment}\n      query={graphql`\n        query DisordersWithScoresQuery($statements: [Statement]) {\n          matchDisorders(statements: $statements) {\n            disorder {\n              orphaNumber\n              name\n              description\n            }\n            score\n          }\n        }\n      `}\n      variables={{ statements }}\n      render={(res) => {\n        const { error, props: data } = res;\n        if (error) {\n          return <div>Error!</div>;\n        }\n        if (!data) {\n          return <div>Loading...</div>;\n        }\n        return <RenderComponent disordersWithScores={data.matchDisorders} {...renderProps} />;\n      }}\n    />\n  );\n}\n\nexport default DisordersWithScores;\n","import React from 'react';\nimport sortBy from 'lodash/sortBy';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\n\nconst DEFAULT_ROWS_PER_PAGE_OPTIONS = [10, 20, 30];\n\nfunction processTableRows(rows, sorting, page, rowsPerPage) {\n  const sort = (row) => Object.keys(row).reduce((acc, key) => (sorting[key] ? [...acc, (o) => sorting[key] * o[key]] : acc), []);\n  return sortBy(rows, sort).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n}\n\nconst styles = () => ({});\n\nfunction CustomTable(props) {\n  const {\n    classes, items, cols, rowsPerPageOptions = DEFAULT_ROWS_PER_PAGE_OPTIONS,\n  } = props;\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(rowsPerPageOptions[0]);\n  const [sorting, setSorting] = React.useState(Object.keys(cols).reduce((acc, key) => ({ ...acc, [key]: 0 }), {}));\n\n  const itemToRow = (item) => Object.keys(cols).reduce((acc, key) => ({ ...acc, [key]: cols[key](item) }), {});\n  const rows = processTableRows(items.map(itemToRow), sorting, page, rowsPerPage);\n\n  const onHeaderSortClick = (header) => () => {\n    setSorting({\n      ...sorting,\n      [header]: sorting[header] ? -sorting[header] : 1,\n    });\n  };\n\n  const onRowClick = (row) => (event) => {\n    event.preventDefault();\n    console.log('clicked on ', row);\n  };\n\n  const onChangePage = (event, value) => {\n    setPage(value);\n  };\n  const onChangeRowsPerPage = (event) => {\n    const { target: { value } } = event;\n    setRowsPerPage(value);\n    setPage(0);\n  };\n\n  const Header = () => (\n    <TableHead>\n      <TableRow>\n        {Object.keys(sorting).map((header) => (\n          <TableCell\n            key={header}\n            sortDirection={!!sorting[header] && (sorting[header] > 0 ? 'asc' : 'desc')}\n          >\n            <TableSortLabel\n              active={!!sorting[header]}\n              direction={(!!sorting[header] && (sorting[header] > 0 ? 'asc' : 'desc')) || 'asc'}\n              onClick={onHeaderSortClick(header)}\n            >\n              {header}\n              {sorting[header] ? (\n                <span className={classes.visuallyHidden}>\n                  {sorting[header] < 0 ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table\n          className={classes.table}\n          aria-labelledby=\"tableTitle\"\n          size=\"medium\"\n        >\n          <Header />\n          <TableBody>\n            {rows.map((row, index) => (\n              <TableRow\n                hover\n                onClick={onRowClick(row)}\n                tabIndex={-1}\n                // eslint-disable-next-line react/no-array-index-key\n                key={index}\n              >\n                {/* eslint-disable-next-line no-restricted-globals */}\n                { Object.keys(cols).map((key) => <TableCell key={key} align={isNaN(row[key]) ? 'left' : 'right'}>{row[key]}</TableCell>)}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n      <TablePagination\n        rowsPerPageOptions={rowsPerPageOptions}\n        component=\"div\"\n        count={items.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        backIconButtonProps={{\n          'aria-label': 'previous page',\n        }}\n        nextIconButtonProps={{\n          'aria-label': 'next page',\n        }}\n        onChangePage={onChangePage}\n        onChangeRowsPerPage={onChangeRowsPerPage}\n      />\n    </div>\n  );\n}\n\nexport default withStyles(styles)(CustomTable);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst styles = (theme) => ({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 600,\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    height: 28,\n    margin: 4,\n  },\n});\n\nfunction SearchBar(props) {\n  const {\n    className, classes, placeholder, onChange,\n  } = props;\n\n  return (\n    <Paper className={classNames(classes.root, className)}>\n      <InputBase\n        className={classes.input}\n        placeholder={placeholder}\n        inputProps={{ 'aria-label': placeholder }}\n        onChange={onChange}\n      />\n      <IconButton className={classes.iconButton} aria-label=\"search\">\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n  );\n}\n\nexport default withStyles(styles)(SearchBar);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport DisordersWithScores from '../hoc/DisordersWithScores';\nimport Table from './Table';\nimport SearchBar from './SearchBar';\n\n\nconst styles = () => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  searchBar: {\n    margin: 'auto',\n    marginBottom: 20,\n  },\n});\n\nfunction round(num, digits = 2) {\n  return +num.toFixed(digits);\n}\n\nfunction DisordersWithScoresTable(props) {\n  const [search, setSearch] = React.useState('');\n  const { classes, disordersWithScores } = props;\n\n  const onSearchBarChange = (event) => {\n    const { value } = event.target;\n    setSearch(value);\n  };\n\n  let disorders = Array.isArray(disordersWithScores) ? disordersWithScores : [];\n  disorders = search\n    ? disordersWithScores.filter(({ disorder: { name, description } }) => (name && name.includes(search))\n      || (description && description.includes(search)))\n    : disordersWithScores;\n\n  return (\n    <div className={classes.root}>\n      <SearchBar\n        className={classes.searchBar}\n        placeholder=\"Search Disorder\"\n        onChange={onSearchBarChange}\n      />\n      <Table\n        items={disorders || []}\n        cols={{\n          orphaNumber: ({ disorder: { orphaNumber } }) => orphaNumber,\n          name: ({ disorder: { name } }) => name,\n          description: ({ disorder: { description } }) => description,\n          score: ({ score }) => round(score),\n        }}\n      />\n    </div>\n  );\n}\n\nfunction ConnectedTable(props) {\n  const { statements, classes } = props;\n  return (\n    <DisordersWithScores\n      statements={statements}\n      render={DisordersWithScoresTable}\n      renderProps={{\n        classes,\n      }}\n    />\n  );\n}\n\nexport default withStyles(styles)(ConnectedTable);\n","import React from 'react';\nimport queryString from 'query-string';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nimport DisordersWithScoresTable from '../components/DisordersWithScoresTable';\n\n\nconst styles = () => ({\n  root: {\n    margin: 10,\n    padding: 10,\n    flexGrow: 1,\n  },\n  tableContainer: {\n    padding: 50,\n  },\n});\n\nfunction DisordersScores(props) {\n  const { classes, location: { search } } = props;\n  let { statements } = queryString.parse(search);\n\n  try {\n    statements = JSON.parse(atob(statements));\n  } catch (e) {\n    statements = [];\n  }\n\n  console.log('statements: ', statements);\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableContainer}>\n        <DisordersWithScoresTable statements={statements} />\n      </div>\n    </Paper>\n  );\n}\n\nexport default withStyles(styles)(DisordersScores);\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme, withStyles } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport orange from '@material-ui/core/colors/orange';\n\nimport AppBar from './components/AppBar';\nimport Home from './views/Home';\nimport Disorders from './views/Disorders';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: orange,\n  },\n});\n\nconst styles = () => ({\n  root: {\n    display: 'flex',\n  },\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  appBarSpacer: theme.mixins.toolbar,\n});\n\nfunction App(props) {\n  const { classes } = props;\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <div>\n          <CssBaseline />\n          <AppBar />\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <Switch>\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"/disorders\" component={Disorders} />\n            </Switch>\n          </main>\n        </div>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}